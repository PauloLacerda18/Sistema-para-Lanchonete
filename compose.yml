services:

    project:
      build:
        context: .

      expose:
        - 5050

      deploy:
        mode: replicated
        replicas: 3
        endpoint_mode: vip
        resources:
          limits:
            cpus: '1'
            memory: 512M
          reservations:
            cpus: '0.5'
            memory: 170M
        

      networks:
        - project-net


    haproxy:
      image: haproxy:3.0.0-alpine
      container_name: haproxy

      volumes:
        - ./config_files/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro

      ports:
        - 5050:9999

      networks:
        - project-net
      
      depends_on:
        - project

    postgres:
      image: postgres:16.3-alpine
      container_name: postgres
      environment:
        POSTGRES_PASSWORD: ${PG_PASSWORD}
        POSTGRES_USER: ${PG_USER}
        POSTGRES_DB: ${PG_DB}

      command: postgres -c 'config_file=/etc/postgresql/postgres.conf'

      volumes:
        - pg-data:/var/lib/postgres/data:rw
        - ./config_files/postgres.conf:/etc/postgresql/postgres.conf:ro

      networks:
        - project-net

    keydb:
      image: eqalpha/keydb:alpine_x86_64_v6.3.4 
      container_name: keydb

      networks:
        - project-net

    ngrok:
      image: ngrok/ngrok:alpine
      container_name: ngrok
      restart: unless-stopped

      command:
        - "start"
        - "--all"
        - "--config"
        - "/etc/ngrok.yml"
      volumes:
        - ./config_files/ngrok.yml:/etc/ngrok.yml:ro
      
      network_mode: host

      depends_on:
        - project
        - haproxy

networks:
  project-net:

volumes:
  pg-data: